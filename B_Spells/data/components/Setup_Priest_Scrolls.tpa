/////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////////            				   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////////            				   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////////      Scroll Creation and Distribution     \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////////            				   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////////            				   \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////              Missing BAMS               //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//it seems that BG2EE (At least!) doesn't have all priest scroll bams.  Add them here if needed

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////                 Scrolls                 //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Priest Scrolls
//This creates a few scrolls that are not eligible for scrollhood.  That should be fine if they are not placed or added to scroll creation
COPY_EXISTING_REGEXP GLOB ~SPPR.[^abcde]*\.SPL~ ~override~
	 PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	  READ_BYTE 0x001C type //Spell type
	   PATCH_IF type = 2 BEGIN
       READ_BYTE 0x0021 general //general type
	   PATCH_IF ((general BAND 0b11000000) = 0b00000000)   BEGIN //If General type (I think)
         READ_LONG  0x0034 level //spell level
 	     READ_LONG 0x0008 name //spell name
	     READ_LONG 0x0050 desc //description
	     READ_SHORT 0x007E target //Target-check
	     READ_SHORT 0x0080 range //range-check
         READ_ASCII 0x0076 spellicon (7)
         INNER_PATCH_SAVE gen ~%SOURCE_RES%~ BEGIN
          REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH ~SPPR~ ~B_PS~
         END
           INNER_ACTION BEGIN
            COPY ~%mod_folder%/data/scrolls/priest_1/b_ps101.itm~ ~override/%gen%.ITM~   //Level 1 universal as generic.  Modify all others after
             WRITE_LONG 0x0008 ~%name%~
             WRITE_LONG 0x000c ~%name%~
             WRITE_LONG 0x0054 ~%desc%~
             WRITE_SHORT 0x007E target //Target-check
             WRITE_SHORT 0x0080 range //range-check
             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
             WRITE_LONG 0x0034 (level * 50)       //cost
             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%spellicon%~ END
           END //end inner action
	   END //end gen type
	   PATCH_IF ((general BAND 0b11000000) = 0b10000000)   BEGIN //If Cleric exclusive (I think)
         READ_LONG  0x0034 level //spell level
 	     READ_LONG 0x0008 name //spell name
	     READ_LONG 0x0050 desc //description
	     READ_SHORT 0x007E target //Target-check
	     READ_SHORT 0x0080 range //range-check
         READ_ASCII 0x0076 spellicon (7)
         INNER_PATCH_SAVE gen ~%SOURCE_RES%~ BEGIN
          REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH ~SPPR~ ~B_CS~
         END
           INNER_ACTION BEGIN
            COPY ~%mod_folder%/data/scrolls/priest_1/b_ps101.itm~ ~override/%gen%.ITM~   //Level 1 universal as generic.  Modify all others after
             WRITE_LONG 0x0008 ~%name%~
             WRITE_LONG 0x000c ~%name%~
             WRITE_LONG 0x0054 ~%desc%~
             WRITE_SHORT 0x007E target //Target-check
             WRITE_SHORT 0x0080 range //range-check
             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
             WRITE_LONG 0x0034 (level * 50)
             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%spellicon%~ END
           END
	   END
	 PATCH_IF ((general BAND 0b11000000) = 0b01000000)   BEGIN //If Druid exclusive (I think)
         READ_LONG  0x0034 level //spell level
 	     READ_LONG 0x0008 name //spell name
	     READ_LONG 0x0050 desc //description
	     READ_SHORT 0x007E target //Target-check
	     READ_SHORT 0x0080 range //range-check
         READ_ASCII 0x0076 spellicon (7)
         INNER_PATCH_SAVE gen ~%SOURCE_RES%~ BEGIN
          REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH ~SPPR~ ~B_DS~
         END //end inner patch save
           INNER_ACTION BEGIN
            COPY ~%mod_folder%/data/scrolls/priest_1/b_ps101.itm~ ~override/%gen%.ITM~   //Level 1 universal as generic.  Modify all others after
             WRITE_LONG 0x0008 ~%name%~
             WRITE_LONG 0x000c ~%name%~
             WRITE_LONG 0x0054 ~%desc%~
             WRITE_SHORT 0x007E target //Target-check
             WRITE_SHORT 0x0080 range //range-check
             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
             WRITE_LONG 0x0034 (level * 50)
             LPF ALTER_EFFECT INT_VAR match_opcode = 146 STR_VAR resource = EVAL ~%spellicon%~ END
           END //end inner action
           //need to add generic scroll bams in game if they don't exist
	   END //gen type
	  END //cleric type spell
	END //source size
BUT_ONLY

//fnp custom spells: , b_w101.spl, b_w427.spl, b_w428.spl, b_w429.spl, d5pr601.spl, b_w204.spl, b_w327.spl, b_w432.spl, b_w724.spl, b_w206.spl, b_w426.spl, d5sh501.spl, B_SSTEP.spl, B_W629.spl,
ACTION_IF FILE_EXISTS_IN_GAME ~B_W631.spl~ BEGIN  // at least one
 COPY_EXISTING_REGEXP GLOB ~B_.[^abcde]*\.SPL~ ~override~
	 PATCH_IF (~%SOURCE_SIZE%~ > ~0x71~) BEGIN
	  READ_BYTE 0x001C type //Spell type
	   PATCH_IF type = 2 BEGIN
             READ_LONG  0x0034 level //spell level
 	     READ_LONG 0x0008 name //spell name
	     READ_LONG 0x0050 desc //description
	     READ_SHORT 0x007E target //Target-check
	     READ_SHORT 0x0080 range //range-check
             READ_ASCII 0x0076 spellicon (7)  //needed?
         INNER_PATCH_SAVE cus0 ~%SOURCE_RES%~ BEGIN
         END
         INNER_PATCH_SAVE cus2 ~%cus0%~ BEGIN
          REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH ~B_S~ ~B_WS~
         END
         INNER_PATCH_SAVE cus1 ~%cus2%~ BEGIN
          REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH ~B_W~ ~B_WS~
         END
           INNER_ACTION BEGIN
            COPY ~%mod_folder%/data/scrolls/priest_1/b_ps101.itm~ ~override/%cus1%.ITM~   //Level 1 universal as generic.  Modify all others after
             WRITE_LONG 0x0008 ~%name%~
             WRITE_LONG 0x000c ~%name%~
             WRITE_LONG 0x0054 ~%desc%~
             WRITE_SHORT 0x007E target //Target-check
             WRITE_SHORT 0x0080 range //range-check
             WRITE_ASCIIE 0x0076  ~%spellicon%A~   //use icon
             WRITE_ASCIIE 0x003a  ~%spellicon%A~   //inventory icon
             WRITE_LONG 0x0034 (level * 50)
             LPF ALTER_EFFECT
               INT_VAR match_opcode = 146            //
               STR_VAR resource = EVAL ~%cus0%~
             END      //
           END
        END
      END
    BUT_ONLY
END

//Still missing fnp custom spells: d5pr601.spl, d5sh501.spl (now for all SD custom priest)
ACTION_IF FILE_EXISTS_IN_GAME ~d5pr601.spl~ BEGIN  // at least one

END
//Druid exclusive: B_DS
//Cleric exclusive: B_CS
//non-exclusive: B_PS

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
/////////////////////////////////////              Scroll Placement           //////////////////////////////////////
/////////////////////////////////////                                         //////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//for BG2EE or BGEE
ACTION_IF GAME_IS ~bg2ee bgee eet~ THEN BEGIN

//level 1 to 2 general and priest scrolls in all temples that offer cures

//lev 1
COPY_EXISTING_REGEXP GLOB ~B_.*\.ITM~ ~override~    // 1st level cleric exclusive
    PATCH_IF (((("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_CS" = 0) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_PS" = 0)) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_DS" = 0)) AND ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "W" != 0)) BEGIN // if scroll
    //now, lev 1 gen/cleric exclusive
    PATCH_IF ((("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_CS1" = 0) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_CS2" = 0)) OR (("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_PS1" = 0) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_PS2" = 0))) AND (("%SOURCE_RES%" STRING_CONTAINS_REGEXP "150" != 0) AND ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "250" != 0)) BEGIN // if lev 1 or 2 scroll
    INNER_PATCH_SAVE scroll ~%SOURCE_RES%~ BEGIN
    END
    INNER_ACTION BEGIN
        COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~ // Load all stores BEG CAMCODE:
	READ_BYTE 0x10 "flags" ELSE 0
            PATCH_IF (("%flags%" BAND 0b00010001) = 0b00010001) BEGIN // if cures available and sells stuff; also filters out invalid files
//            PATCH_IF (("%flags%" BAND 0b00010001) = 0b00010001) BEGIN // if cures available and sells stuff; also filters out invalid files
            READ_LONG 0x2c "buy_off"   ELSE 0
  	    READ_LONG 0x34 "sale_off"  ELSE 0
            READ_LONG 0x4c "drink_off" ELSE 0
 	    READ_LONG 0x70 "cure_off"  ELSE 0
	    READ_LONG 0x74 "cure_num"  ELSE 0
	    SET "new_cure" = 0
	    SET "sppr103" = 0 // cure light wounds
            // check if cures already available
            FOR (index = 0; index < cure_num; index = index + 1) BEGIN
		READ_ASCII ("%cure_off%" + ("%index%" * 0x0c)) "resref"
		PATCH_IF ("%resref%" STRING_COMPARE_CASE "sppr103" = 0) BEGIN
		  SET "sppr103" = 1
		END 
            END //end for loop
 	        // add lev 1/2 scrolls if at least cure light wounds offered--cleric exclusive and gen scrolls
  	        PATCH_IF ("%sppr103%" = 1) BEGIN // if cure light wounds offered, add lev 1 scrolls
                      ADD_STORE_ITEM ~%scroll%~ #1 #0 #0 ~IDENTIFIED~ #5    //
	        END
	    END //end cures/invalid
    BUT_ONLY
    END
END //lev 1/2 gen/cleric exclusives
//lev 3  
    PATCH_IF ((("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_CS3" = 0) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_PS3" = 0)) AND ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "350" != 0))  BEGIN // if lev 3 scroll
    INNER_PATCH_SAVE scroll3 ~%SOURCE_RES%~ BEGIN 
    END
    INNER_ACTION BEGIN
        COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~ // Load all stores BEG CAMCODE:
	READ_BYTE 0x10 "flags" ELSE 0
            PATCH_IF (("%flags%" BAND 0b00010001) = 0b00010001) BEGIN // if cures available and sells stuff; also filters out invalid files
            READ_LONG 0x2c "buy_off"   ELSE 0
  	    READ_LONG 0x34 "sale_off"  ELSE 0
            READ_LONG 0x4c "drink_off" ELSE 0
 	    READ_LONG 0x70 "cure_off"  ELSE 0
	    READ_LONG 0x74 "cure_num"  ELSE 0
	    SET "new_cure" = 0
  	    SET "sppr307" = 0 // remove curse
            // check if cures already available
            FOR (index = 0; index < cure_num; index = index + 1) BEGIN
		READ_ASCII ("%cure_off%" + ("%index%" * 0x0c)) "resref"
	        PATCH_IF ("%resref%" STRING_COMPARE_CASE "sppr307" = 0) BEGIN
	          SET "sppr307" = 1
	        END
            END //end for loop
 	        // add lev 1/2 scrolls if at least cure light wounds offered--cleric exclusive and gen scrolls
  	        PATCH_IF ("%sppr307%" = 1) BEGIN // if remove curse offered, add lev 1 scrolls
                      ADD_STORE_ITEM ~%scroll3%~ #1 #0 #0 ~IDENTIFIED~ #5    //
	        END
	    END //end cures/invalid
    BUT_ONLY
    END
END //lev 3 gen/cleric exclusives

END //end scroll file name
BUT_ONLY


//special cases
//druid scrolls

////////////////////////////////////////////////
////////////////////////////////////////////////
///////////                         ////////////
///////////     Temple of Wisdom    ////////////
///////////                         ////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
//1st through 3rd priest scrolls (including druid) - they are more rare.  two only
ACTION_IF FILE_EXISTS_IN_GAME ~TEM2304.STO~ BEGIN  //Temple of wisdom

//druid
  COPY_EXISTING_REGEXP GLOB ~B_DS1.*\.ITM~ ~override~    // 1st level cleric exclusive
    INNER_PATCH_SAVE scroll ~%SOURCE_RES%~ BEGIN
    END
    INNER_ACTION BEGIN
        COPY_EXISTING ~TEM2304.STO~ ~override~
          ADD_STORE_ITEM ~%scroll%~ #1 #0 #0 ~IDENTIFIED~ #2    //
    END
  COPY_EXISTING_REGEXP GLOB ~B_DS2.*\.ITM~ ~override~    // 1st level cleric exclusive
    INNER_PATCH_SAVE scroll ~%SOURCE_RES%~ BEGIN
    END
    INNER_ACTION BEGIN
        COPY_EXISTING ~TEM2304.STO~ ~override~
          ADD_STORE_ITEM ~%scroll%~ #1 #0 #0 ~IDENTIFIED~ #2    //
    END
  COPY_EXISTING_REGEXP GLOB ~B_DS3.*\.ITM~ ~override~    // 1st level cleric exclusive
    INNER_PATCH_SAVE scroll ~%SOURCE_RES%~ BEGIN
    END
    INNER_ACTION BEGIN
        COPY_EXISTING ~TEM2304.STO~ ~override~
          ADD_STORE_ITEM ~%scroll%~ #1 #0 #0 ~IDENTIFIED~ #2    //
    END

END   //end if temp of wisdom in game

//special cases lev 4+ scrolls

END //end game is bgee or bg2ee

//now iwdee
ACTION_IF GAME_IS ~iwdee~ THEN BEGIN
//level 1 to 2 general and priest scrolls in all temples that offer cures

//lev 1
COPY_EXISTING_REGEXP GLOB ~B_.*\.ITM~ ~override~    // 1st level cleric exclusive
    PATCH_IF (((("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_CS" = 0) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_PS" = 0)) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_DS" = 0)) AND ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "W" != 0)) BEGIN // if scroll
    //now, lev 1 gen/cleric exclusive
    PATCH_IF ((("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_CS1" = 0) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_CS2" = 0)) OR (("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_PS1" = 0) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_PS2" = 0))) AND (("%SOURCE_RES%" STRING_CONTAINS_REGEXP "150" != 0) AND ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "250" != 0)) BEGIN // if lev 1 or 2 scroll
    INNER_PATCH_SAVE scroll ~%SOURCE_RES%~ BEGIN
    END
    INNER_ACTION BEGIN
        COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~ // Load all stores BEG CAMCODE:
	READ_BYTE 0x10 "flags" ELSE 0
            PATCH_IF (("%flags%" BAND 0b00100001) = 0b00100001) BEGIN // if cures available and sells stuff; also filters out invalid files
//            PATCH_IF (("%flags%" BAND 0b00010001) = 0b00010001) BEGIN // if cures available and sells stuff; also filters out invalid files
            READ_LONG 0x2c "buy_off"   ELSE 0
  	    READ_LONG 0x34 "sale_off"  ELSE 0
            READ_LONG 0x4c "drink_off" ELSE 0
 	    READ_LONG 0x70 "cure_off"  ELSE 0
	    READ_LONG 0x74 "cure_num"  ELSE 0
	    SET "new_cure" = 0
	    SET "sppr103" = 0 // cure light wounds
            // check if cures already available
            FOR (index = 0; index < cure_num; index = index + 1) BEGIN
		READ_ASCII ("%cure_off%" + ("%index%" * 0x0c)) "resref"
		PATCH_IF ("%resref%" STRING_COMPARE_CASE "sppr103" = 0) BEGIN
		  SET "sppr103" = 1
		END 
            END //end for loop
 	        // add lev 1/2 scrolls if at least cure light wounds offered--cleric exclusive and gen scrolls
  	        PATCH_IF ("%sppr103%" = 1) BEGIN // if cure light wounds offered, add lev 1 scrolls
                      ADD_STORE_ITEM ~%scroll%~ #1 #0 #0 ~IDENTIFIED~ #5    //
	        END
	    END //end cures/invalid
    BUT_ONLY
    END
END //lev 1/2 gen/cleric exclusives
//lev 3  
    PATCH_IF ((("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_CS3" = 0) OR ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "B_PS3" = 0)) AND ("%SOURCE_RES%" STRING_CONTAINS_REGEXP "350" != 0))  BEGIN // if lev 3 scroll
    INNER_PATCH_SAVE scroll3 ~%SOURCE_RES%~ BEGIN 
    END
    INNER_ACTION BEGIN
        COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~ // Load all stores BEG CAMCODE:
	READ_BYTE 0x10 "flags" ELSE 0
            PATCH_IF (("%flags%" BAND 0b00100001) = 0b00100001) BEGIN // if cures available and sells stuff; also filters out invalid files
            READ_LONG 0x2c "buy_off"   ELSE 0
  	    READ_LONG 0x34 "sale_off"  ELSE 0
            READ_LONG 0x4c "drink_off" ELSE 0
 	    READ_LONG 0x70 "cure_off"  ELSE 0
	    READ_LONG 0x74 "cure_num"  ELSE 0
	    SET "new_cure" = 0
  	    SET "sppr307" = 0 // remove curse
            // check if cures already available
            FOR (index = 0; index < cure_num; index = index + 1) BEGIN
		READ_ASCII ("%cure_off%" + ("%index%" * 0x0c)) "resref"
	        PATCH_IF ("%resref%" STRING_COMPARE_CASE "sppr307" = 0) BEGIN
	          SET "sppr307" = 1
	        END
            END //end for loop
 	        // add lev 1/2 scrolls if at least cure light wounds offered--cleric exclusive and gen scrolls
  	        PATCH_IF ("%sppr307%" = 1) BEGIN // if remove curse offered, add lev 1 scrolls
                      ADD_STORE_ITEM ~%scroll3%~ #1 #0 #0 ~IDENTIFIED~ #5    //
	        END
	    END //end cures/invalid
    BUT_ONLY
    END
END //lev 3 gen/cleric exclusives

END //end scroll file name
BUT_ONLY

//special cases lev 4+ scrolls
END //end placement iwdee
